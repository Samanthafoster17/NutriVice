{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saman\\\\OneDrive\\\\Documents\\\\In-class\\\\Project3\\\\Project3\\\\client\\\\src\\\\components\\\\Chart\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nexport default class Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getChartData = canvas => {\n      const data = this.state.data;\n      return data;\n    };\n\n    this.state = {\n      data: {\n        labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n        datasets: [{\n          label: \"Week One\",\n          data: [140, 145, 146, 150, 152, 155, 162],\n          borderColor: ['#2d6a4f'],\n          backgroundColor: ['#52B788'],\n          pointBackgroundColor: '#D8F3dC',\n          pointBorderColor: '#081c15'\n        }, {\n          label: 'Week Two',\n          data: [155, 158, 163, 168, 165, 168, 170],\n          borderColor: ['#2d6a4f'],\n          backgroundColor: ['#52B788'],\n          pointBackgroundColor: '#D8F3dC',\n          pointBorderColor: '#081c15'\n        }]\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        options: {\n          title: {\n            display: true,\n            text: 'Progress'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                min: 0,\n                stepsize: 10,\n                callback: function (value, index, values) {\n                  return value + ' lbs';\n                }\n              }\n            }]\n          },\n          responsive: true\n        },\n        data: this.getChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const Chart = () =>{\n//     const data = {\n//         labels: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n//         datasets: [\n//             {\n//                 label: 'Week One',\n// data: [140, 145, 146, 150, 152, 155, 162],\n// borderColor: ['#2d6a4f'],\n// backgroundColor: ['#52B788'],\n// pointBackgroundColor: '#D8F3dC',\n// pointBorderColor: '#081c15'\n//              },\n//  {\n//     label: 'Week Two',\n//     data: [155, 158, 163, 168, 165, 168, 170],\n//     borderColor: ['#2d6a4f'],\n//     backgroundColor: ['#52B788'],\n//     pointBackgroundColor: '#D8F3dC',\n//     pointBorderColor: '#081c15'\n//  },\n//         ]\n//     }\n// const options = {\n// title:{\n//     display: true,\n//     text: 'Progress'\n// },\n// scales: {\n//     yAxes:[\n//         {\n//             ticks: {\n//                 min: 0,\n//                 stepsize: 10,\n//                 callback: function(value, index, values) {\n//                     return value + ' lbs'\n//                 }\n//             }\n//         }\n//     ]\n// }\n// }\n//     return(\n//      <Line data={data} options={options}/>\n//     )\n// }\n// export default Chart","map":{"version":3,"sources":["C:/Users/saman/OneDrive/Documents/In-class/Project3/Project3/client/src/components/Chart/index.js"],"names":["React","Component","Line","Chart","constructor","props","getChartData","canvas","data","state","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","render","position","title","display","text","scales","yAxes","ticks","min","stepsize","callback","value","index","values","responsive"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4BnBC,YA5BmB,GA4BJC,MAAM,IAAI;AACrB,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,aAAOA,IAAP;AACH,KA/BkB;;AAGf,SAAKC,KAAL,GAAa;AAETD,MAAAA,IAAI,EAAE;AACFE,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CADN;AAEFC,QAAAA,QAAQ,EAAE,CACN;AAAIC,UAAAA,KAAK,EAAE,UAAX;AACIJ,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CADV;AAEIK,UAAAA,WAAW,EAAE,CAAC,SAAD,CAFjB;AAGIC,UAAAA,eAAe,EAAE,CAAC,SAAD,CAHrB;AAIIC,UAAAA,oBAAoB,EAAE,SAJ1B;AAKIC,UAAAA,gBAAgB,EAAE;AALtB,SADM,EAQN;AACIJ,UAAAA,KAAK,EAAE,UADX;AAEIJ,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAFV;AAGIK,UAAAA,WAAW,EAAE,CAAC,SAAD,CAHjB;AAIIC,UAAAA,eAAe,EAAE,CAAC,SAAD,CAJrB;AAKIC,UAAAA,oBAAoB,EAAE,SAL1B;AAMIC,UAAAA,gBAAgB,EAAE;AANtB,SARM;AAFR;AAFG,KAAb;AAuBH;;AAODC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AACI,QAAA,OAAO,EAAE;AACLC,UAAAA,KAAK,EAAC;AACFC,YAAAA,OAAO,EAAE,IADP;AAEFC,YAAAA,IAAI,EAAE;AAFJ,WADD;AAKLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAC,CACF;AACIC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,GAAG,EAAE,CADF;AAEHC,gBAAAA,QAAQ,EAAE,EAFP;AAGHC,gBAAAA,QAAQ,EAAE,UAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AACrC,yBAAOF,KAAK,GAAG,MAAf;AACH;AALE;AADX,aADE;AADF,WALH;AAmBLG,UAAAA,UAAU,EAAE;AAnBP,SADb;AAwBI,QAAA,IAAI,EAAE,KAAKzB;AAxBf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AAlEwC,C,CAoE7C;AAEA;AACA;AACA;AACA;AACA;AACgB;AACA;AACA;AACA;AACA;AAChB;AACY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEZ;AACA;AAEI;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACJ;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n\nexport default class Chart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            data: {\n                labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n                datasets: [\n                    {   label: \"Week One\",\n                        data: [140, 145, 146, 150, 152, 155, 162],\n                        borderColor: ['#2d6a4f'],\n                        backgroundColor: ['#52B788'],\n                        pointBackgroundColor: '#D8F3dC',\n                        pointBorderColor: '#081c15'\n                    },\n                    {\n                        label: 'Week Two',\n                        data: [155, 158, 163, 168, 165, 168, 170],\n                        borderColor: ['#2d6a4f'],\n                        backgroundColor: ['#52B788'],\n                        pointBackgroundColor: '#D8F3dC',\n                        pointBorderColor: '#081c15'\n                     },\n                ]\n            }\n        }\n    }\n\n    getChartData = canvas => {\n        const data = this.state.data;\n        return data\n    }\n\n    render() {\n        return (\n            <div style={{ position: \"relative\" }}>\n                <h3>Progress</h3>\n                <Line\n                    options={{\n                        title:{\n                            display: true,\n                            text: 'Progress'\n                        },\n                        scales: {\n                            yAxes:[\n                                {\n                                    ticks: {\n                                        min: 0,\n                                        stepsize: 10,\n                                        callback: function(value, index, values) {\n                                            return value + ' lbs'\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \n                        responsive: true,\n                    \n\n                    }}\n                    data={this.getChartData}\n                />\n            </div>\n        )\n    }\n}\n// const Chart = () =>{\n\n//     const data = {\n//         labels: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n//         datasets: [\n//             {\n//                 label: 'Week One',\n                // data: [140, 145, 146, 150, 152, 155, 162],\n                // borderColor: ['#2d6a4f'],\n                // backgroundColor: ['#52B788'],\n                // pointBackgroundColor: '#D8F3dC',\n                // pointBorderColor: '#081c15'\n//              },\n            //  {\n            //     label: 'Week Two',\n            //     data: [155, 158, 163, 168, 165, 168, 170],\n            //     borderColor: ['#2d6a4f'],\n            //     backgroundColor: ['#52B788'],\n            //     pointBackgroundColor: '#D8F3dC',\n            //     pointBorderColor: '#081c15'\n            //  },\n\n//         ]\n//     }\n\n    // const options = {\n        // title:{\n        //     display: true,\n        //     text: 'Progress'\n        // },\n        // scales: {\n        //     yAxes:[\n        //         {\n        //             ticks: {\n        //                 min: 0,\n        //                 stepsize: 10,\n        //                 callback: function(value, index, values) {\n        //                     return value + ' lbs'\n        //                 }\n        //             }\n        //         }\n        //     ]\n        // }\n    // }\n//     return(\n//      <Line data={data} options={options}/>\n//     )\n// }\n\n// export default Chart"]},"metadata":{},"sourceType":"module"}