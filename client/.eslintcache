[{"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\index.js":"1","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\App.js":"2","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\pages\\LandingPage.js":"3","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Signup\\index.js":"4","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Signin\\index.js":"5","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Chart\\index.js":"6","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Nav\\index.js":"7","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\BMI\\index.js":"8","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\GetMealData\\index.js":"9","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\DietPref\\index.js":"10","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Jumbotron\\index.js":"11","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\CardItem\\index.js":"12","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Cards\\index.js":"13","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Footer\\index.js":"14","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Button\\index.js":"15","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\MealList\\index.js":"16","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Meal\\index.js":"17"},{"size":230,"mtime":1612205299174,"results":"18","hashOfConfig":"19"},{"size":1008,"mtime":1612202364221,"results":"20","hashOfConfig":"19"},{"size":894,"mtime":1611974053337,"results":"21","hashOfConfig":"19"},{"size":4579,"mtime":1612124902876,"results":"22","hashOfConfig":"19"},{"size":2862,"mtime":1612205313121,"results":"23","hashOfConfig":"19"},{"size":4765,"mtime":1612033916631,"results":"24","hashOfConfig":"19"},{"size":2479,"mtime":1612027250842,"results":"25","hashOfConfig":"19"},{"size":10936,"mtime":1612202366810,"results":"26","hashOfConfig":"19"},{"size":2158,"mtime":1612202364230,"results":"27","hashOfConfig":"19"},{"size":6315,"mtime":1612202364224,"results":"28","hashOfConfig":"19"},{"size":507,"mtime":1612142390295,"results":"29","hashOfConfig":"19"},{"size":678,"mtime":1611974053234,"results":"30","hashOfConfig":"19"},{"size":315,"mtime":1611974053243,"results":"31","hashOfConfig":"19"},{"size":658,"mtime":1611974053251,"results":"32","hashOfConfig":"19"},{"size":763,"mtime":1611974053229,"results":"33","hashOfConfig":"19"},{"size":810,"mtime":1612202366808,"results":"34","hashOfConfig":"19"},{"size":1172,"mtime":1612202364245,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"163ol69",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\index.js",[],["77","78"],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\App.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\pages\\LandingPage.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Signup\\index.js",["79","80","81","82","83"],"import axios from 'axios';\nimport React, { Component} from 'react';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass  Signup extends Component{\n   constructor() {\n      super();\n      this.state = {\n         name: \"\",\n         username: \"\",\n         email: \"\",\n         password: \"\",\n         password2: \"\",\n         errors: {}\n      };\n   }\n\n   onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n   };\n\n   onSubmit = e => {\n      e.preventDefault();\n\n      const newUser = {\n         name: this.state.name,\n         username: this.state.name,\n         email: this.state.email,\n         password: this.state.password,\n         password2: this.state.password2\n      };\n      console.log(newUser);\n\n      // fetch('http://localhost:5000/api/users/register', {\n      //    method: 'POST',\n      //    headers: {\n      //       'Accept': 'application/json',\n      //       'Content-Type': 'application/json',\n      //    },\n      //    body: JSON.stringify({\n      //       name: this.state.name,\n      //       username: this.state.name,\n      //       email: this.state.email,\n      //       password: this.state.password,\n      //       password2: this.state.password2\n      //     })\n      // })\n\n      axios.post('http://localhost:5000/api/users/register', newUser)\n         .then(res => console.log(res))\n         .catch(err => console.log(err));\n\n\n         this.setState({\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n         })\n\n      console.log('out here in submit');\n   }\n\nrender() {\n   const { errors } = this.state;\n   return (\n      <div className=\"container-fluid main\">\n          <div className=\"container-fluid\">\n              <h1 className=\"lead brand\">\n                  NutriVice\n              </h1>\n              <h3 className=\"quotes\"> Famous quote</h3>\n              <h4 className=\" quotes\"> “Health requires healthy food.”</h4>\n                <h6 className=\" quotes\"> – Roger Williams</h6>\n               \n               {/* user signin form */}\n              <form className=\"signup\" noValidate onSubmit={this.onSubmit}>\n              <div className=\"mb-3\">\n               <label htmlFor=\"name\" className=\"form-label\">Name</label>\n               <input type=\"text\" className=\"form-control form-group\"  \n               onChange={this.onChange}\n               value={this.state.name}\n               error={errors.name}\n               id=\"name\"\n               type=\"text\"\n               />\n            </div>\n            <div className=\"mb-3\">\n               <label htmlFor=\"username\" className=\"form-label\">Username</label>\n               <input type=\"tel\" className=\"form-control form-group\"  \n                onChange={this.onChange}\n                value={this.state.username}\n                error={errors.username}\n                id=\"username\"\n                type=\"text\"\n               />\n            </div>\n            <div className=\"mb-3\">\n               <label htmlFor=\"email\" className=\"form-label\">Email</label>\n               <input type=\"email\" className=\"form-control form-group\" \n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"text\"\n               />\n            </div>\n            <div className=\"mb-3\">\n               <label htmlFor=\"password\" className=\"form-label\">Password</label>\n               <input type=\"password\" className=\"form-control form-group\"\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n               />\n            </div>\n            <div className=\"mb-3\">\n               <label htmlFor=\"password\" className=\"form-label\">Confirm Password</label>\n               <input type=\"password\" className=\"form-control form-group\"\n                onChange={this.onChange}\n                value={this.state.password2}\n                error={errors.password2}\n                id=\"password2\"\n                type=\"password\"\n               />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n            <p className=\"grey-text text-darken-1\">\n                Don't have an account? <a href=\"/login\">Login</a>\n              </p>\n          </form>\n          {/* sales texts */}\n          </div>\n           <div>\n          \n           </div>\n\n      </div>\n    )\n}\n}\n\nexport default Signup;","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Signin\\index.js",["84","85","86"],"import React, { Component} from 'react';\nimport {Link } from 'react-router-dom';\nimport './style.css';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass Signin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n  const userInfo = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    console.log(userInfo);\n\n      axios.post('http://localhost:5000/api/users/login', userInfo)\n      .then(res => {\n        console.log(res);\n        localStorage.setItem('token', res.userInfo.token);\n      })\n      .catch(err => {\n       console.log(err);\n      })\n  };\n\n    render() {\n      const { errors } = this.state;\n      return (\n        <div className=\"container-fluid main\">\n            <div className=\"container-fluid\">\n            <h1 className=\"lead brand\">\n                  NutriVice\n              </h1>\n                <p className=\"display-4 quotes\">\n                  <h3 className=\"quotes\"> Famous quote</h3>\n              <h4 className=\" quotes\"> “Healthy eating is a way of life, so it’s important to establish <br />routines that are simple, realistically, and ultimately livable.”</h4>\n                <h6 className=\" quotes\">– Horace</h6>\n                 </p>\n                 \n                 {/* user signin form */}\n                <form className=\"signin\" noValidate onSubmit={this.onSubmit}>\n              <div className=\"mb-3\">\n                 <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                 <input type=\"email\" className=\"form-control\" aria-describedby=\"emailhelp\" \n                 onChange={this.onChange}\n                 value={this.state.email}\n                 error={errors.email}\n                 id=\"email\"\n                 type=\"email\"\n                 />\n              </div>\n              <div className=\"mb-3\">\n                 <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                 <input type=\"password\" className=\"form-control\" aria-describedby=\"emailhelp\"\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                 />\n              </div>\n              <button type=\"submit\"  class=\"btn btn-primary\">Signin</button>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <a href=\"/register\">Register</a>\n              </p>\n            </form>\n            {/* sales texts */}\n            </div>\n             <div>\n            \n             </div>\n  \n        </div>\n      )\n    }\n}\n\nexport default Signin;","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Chart\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Nav\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\BMI\\index.js",["87"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Spoonacular from \".\";\nimport \"./style.css\";\nimport BmiChart from \"../images/1848503788-huge.jpg\";\n\nexport default class BMI extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      heightFeet: '',\n      heightInch: '',\n      weight: '',\n      activityLevel: '',\n      gender: '',\n      age: '',\n      goalWeight: '',\n    }\n\n    this.handleHeightFeetChange = this.handleHeightFeetChange.bind(this);\n    this.handleHeightInchChange = this.handleHeightInchChange.bind(this);\n    this.handleWeightChange = this.handleWeightChange.bind(this);\n    this.calculateBMI = this.calculateBMI.bind(this);\n    this.handleActivityLevelChange = this.handleActivityLevelChange.bind(this);\n    this.handleGenderChange = this.handleGenderChange.bind(this);\n    this.handleAgeChange = this.handleAgeChange.bind(this);\n    this.handleGoalWeightChange = this.handleGoalWeightChange.bind(this);\n  }\n\n  handleHeightFeetChange(event) {\n    this.setState({\n      heightFeet: event.target.value\n    });\n  }\n\n  handleHeightInchChange(event) {\n    this.setState({\n      heightInch: event.target.value\n    });\n  }\n\n  handleWeightChange(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  }\n\n  handleActivityLevelChange(event) {\n    this.setState({\n      activityLevel: event.target.value\n    });\n  }\n\n  handleGenderChange(event) {\n    this.setState({\n      gender: event.target.value\n    });\n  }\n\n  handleAgeChange(event) {\n    this.setState({\n      age: event.target.value\n    })\n  }\n\n  handleGoalWeightChange(event) {\n    this.setState({\n      goalWeight: event.target.value\n    });\n  }\n\n\n  calculateBMI() {\n    if (this.state.weight && this.state.heightFeet && this.state.heightInch) {\n      // BMI Formula = (WEIGHT[in pounds] / (HEIGHT[in inches] * HEIGHT[in inches])) * 703;\n      let INCHES_IN_FEET = 12;\n\n      var height = Number(this.state.heightFeet);\n      // convert feet to inches\n      height *= INCHES_IN_FEET;\n      // add the inches input field\n      height += Number(this.state.heightInch);\n\n      let weight = this.state.weight;\n\n      var bmi = (weight / (height * height)) * 703;\n      bmi = bmi.toFixed(2);\n\n      return bmi;\n    }\n  }\n\n  getBMIResults(bmi) {\n    let bmiResults = {\n      label: '',\n      alertClass: '',\n    };\n\n    if (bmi <= 18.5) {\n      bmiResults.label = 'Underweight';\n      bmiResults.alertClass = 'alert-danger';\n    }\n    else if (bmi <= 24.9) {\n      bmiResults.label = 'Normal weight';\n      bmiResults.alertClass = 'alert-success';\n    }\n    else if (bmi <= 29.9) {\n      bmiResults.label = 'Overweight';\n      bmiResults.alertClass = 'alert-warning';\n    }\n    else if (bmi >= 30) {\n      bmiResults.label = 'Obesity';\n      bmiResults.alertClass = 'alert-danger';\n    } else {\n      bmiResults.label = 'BMI';\n      bmiResults.alertClass = 'alert-primary';\n    }\n\n    return bmiResults;\n  }\n\n\n  getBMR() {\n    if (this.state.weight && this.state.heightFeet && this.state.heightInch && this.state.age && this.state.goalWeight) {\n      let INCHES_IN_FEET = 12;\n\n      var height = Number(this.state.heightFeet);\n\n      height *= INCHES_IN_FEET;\n\n      height += Number(this.state.heightInch);\n\n      if (this.state.gender === \"Male\") {\n\n        let bmr = 66.47 + (this.state.weight * 6.24) + (12.7 * height) - (6.755 * this.state.age);\n\n        return bmr.toFixed(2)\n      }\n\n      else if (this.state.gender === \"Female\") {\n        let bmr = 655.51 + (4.35 * this.state.weight) + (4.7 * height) - (4 - 7 * this.state.age);\n\n        return bmr.toFixed(2)\n\n      }\n      else {\n        let bmr = \"\";\n        return bmr\n      }\n    }\n  }\n\n  getCalPerDay(bmr) {\n\n    if (this.state.activityLevel && this.state.weight && this.state.heightFeet && this.state.heightInch && this.state.age && this.state.goalWeight) {\n\n      if (this.state.goalWeight === \"lose\") {\n\n\n        if (this.state.activityLevel === \"little\") {\n          let cpd = (bmr * 1.2);\n          console.log(\"cpd\")\n          return cpd.toFixed(2)\n        }\n        else if (this.state.activityLevel === \"light\") {\n          let cpd = (bmr * 1.375)\n          return cpd.toFixed(2)\n        }\n        else if (this.state.activityLevel === \"moderate\") {\n          let cpd = (bmr * 1.55)\n          return cpd.toFixed(2)\n        }\n\n        else if (this.state.activityLevel === \"very\") {\n          let cpd = (bmr * 1.725)\n          return cpd.toFixed(2)\n        }\n        else if (this.state.activityLevel === \"extra\") {\n          let cpd = (bmr * 1.9)\n          return cpd.toFixed(2)\n        }\n      }\n\n      else {\n        if (this.state.activityLevel === \"little\") {\n\n          let cpd = ((bmr * 1.2) + (bmr * 0.15));\n\n          return cpd.toFixed(2)\n        }\n        else if (this.state.activityLevel === \"light\") {\n          let cpd = ((bmr * 1.375) + (bmr * 0.15))\n          return cpd.toFixed(2)\n        }\n        else if (this.state.activityLevel === \"moderate\") {\n          let cpd = ((bmr * 1.55) + (bmr * 0.15))\n          return cpd.toFixed(2)\n        }\n\n        else if (this.state.activityLevel === \"very\") {\n          let cpd = ((bmr * 1.725) + (bmr * 0.15))\n          return cpd.toFixed(2)\n        }\n        else if (this.state.activityLevel === \"extra\") {\n          let cpd = ((bmr * 1.9) + (bmr * 0.15))\n          return cpd.toFixed(2)\n        }\n      }\n\n    }\n  }\n\n  render() {\n\n    let bmi = this.calculateBMI();\n    let results = this.getBMIResults(bmi);\n    let bmr = this.getBMR();\n    let cpd = this.getCalPerDay(bmr);\n\n\n\n    return (\n      <div className=\"BMI container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            <h1>Your Journey Begins Here!</h1>\n            <p>Enter your information below.</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <form>\n              <div className=\"form-group\">\n                <legend>Current Weight</legend>\n                <div className=\"row\">\n                  <div className=\"col-xs-12\">\n                    <input className=\"form-control\" id=\"bmiWeight\" type=\"number\" min=\"1\" max=\"1000\" value={this.state.weight} onChange={this.handleWeightChange} />\n                    <label className=\"control-label\" htmlFor=\"bmiWeight\">lb</label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <legend>Height</legend>\n                <div className=\"row\">\n                  <div className=\"col-xs-6\">\n                    <input className=\"form-control\" id=\"bmiHeightFeet\" type=\"number\" min=\"1\" max=\"12\" value={this.state.heightFeet} onChange={this.handleHeightFeetChange} />\n                    <label className=\"control-label\" htmlFor=\"bmiHeightFeet\">ft</label>\n                  </div>\n                  <div className=\"col-xs-6\">\n                    <input className=\"form-control\" id=\"bmiHeightInch\" type=\"number\" min=\"0\" max=\"12\" value={this.state.heightInch} onChange={this.handleHeightInchChange} />\n                    <label className=\"control-label\" htmlFor=\"bmiHeightInch\">in</label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <legend>Activity Level</legend>\n                <div className=\"row\">\n                  <div className=\"col-xs-12\">\n                    <select value={this.state.activityLevel} onChange={this.handleActivityLevelChange}>\n                      <option default>Select Your Activity Level</option>\n                      <option name=\"little\" value=\"little\">Little/no exercise</option>\n                      <option name=\"light\" value=\"light\">Light exercise</option>\n                      <option name=\"moderate\" value=\"moderate\">Moderate exercise (3-5days/week)</option>\n                      <option name=\"very\" value=\"very\">Very active (6-7 days/week)</option>\n                      <option name=\"extra\" value=\"extra\">Extra active (very active and physical job)</option>\n                    </select>\n                  </div>\n                </div>\n\n\n                <div className=\"form-group\">\n                  <legend>Gender</legend>\n                  <div className=\"row\">\n                    <div className=\"col-xs-6\">\n                      <select value={this.state.gender} onChange={this.handleGenderChange}>\n                        <option default>Select Your Gender</option>\n                        <option name=\"male\"> Male</option>\n                        <option name=\"female\">Female</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <legend> Age</legend>\n                  <div className=\"row\">\n                    <div className=\"col-xs-6\">\n                      <input className=\"form-control\" id=\"age\" type=\"number\" min=\"1\" max=\"1000\" value={this.state.age} onChange={this.handleAgeChange} />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <legend>Weight Goal</legend>\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <select value={this.state.goalWeight} onChange={this.handleGoalWeightChange} >\n                        <option default>Select Your Weight Goal</option>\n                        <option name=\"gain\" value=\"gain\"> Maintain/Gain Weight</option>\n                        <option name=\"lose\" value=\"lose\">Lose Weight</option>\n                      </select>\n                    </div>\n                  </div>\n                  <br />\n                  <p>Please verify all information is corrrect for accuracy</p>\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"col-sm-6\">\n            <BmiDisplay bmi={bmi} cpd={cpd} bmr={bmr} label={results.label} alertClass={results.alertClass} />\n          </div>\n          <button id=\"filterBtnThree\" className=\"btn btn-default filter-button\">\n            <Link to={\"/DietPref\"}>Continue</Link></button>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n\nfunction BmiDisplay(props) {\n  return (\n    <div>\n      <div className={\"bmi-result alert \" + props.alertClass}>\n        <div> BMI Results: {\" \", props.bmi || '--.-'}</div>\n        <div>{props.label}</div>\n        <div>BMR Resluts: {props.bmr} </div>\n        <div>Suggested Calories Per Day: {props.cpd}</div>\n      </div>\n\n      <p><strong>What is Basal Metabolic Rate (BMR)?</strong> <br />\nThe Basal Metabolic Rate (BMR) estimates not just the amount of calories you burn off when inactive,\nbut also the daily calorie number which accounts for your lifestyle activity level. Providing you representation for your everyday calorie consumption. </p>\n\n      <img src={BmiChart} alt=\"BMI chart\" />\n    </div>\n\n  )\n\n}\n\n\n\n\n","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\GetMealData\\index.js",["88"],"import React, { useState } from \"react\";\nimport MealList from \"../MealList\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n\nexport default function GetMeal({ preferences }) {\n    const [mealData, setMealData] = useState(null);\n    const [calories, setCalories] = useState(2000);\n\n\n    function handleChange(e) {\n        setCalories(e.target.value)\n\n    }\n\n    function getMealData() {\n        fetch(\n            `https://api.spoonacular.com/mealplanner/generate?apiKey=9ea0b3f72d644afe9f02e4073a87573d&timeFrame=day&targetCalories=${calories}&diet=${preferences}`\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                setMealData(data);\n                console.log(data)\n                console.log(preferences)\n            })\n            .catch(() => {\n                console.log(\"error\");\n            })\n    }\n\n    return (\n\n        <div>\n            <div className=\"getMeals\">\n                <section className=\"controls\">\n                    <input type=\"number\" placeholder=\"Calories (e.g. 2000)\" onChange={handleChange} />\n                    <br />\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n                    <label className=\"form-check-label\"> Use My Suggested Calories  </label>\n                </section>\n                <p><strong>Note: </strong>You may enter your target calories for the day, or check the box to use your suggested calories that we have calculated with the information you have entered,\n               <br /> If no calorie amount is entered and \"Use My Suggested Calories\" is left unchecked, you will recieve a meal plan based on 2000 calories.<br />\n               Please ensure one of these options are completed to provide you the best experience from our team!\n            </p>\n                <br />\n                <button id=\"filterBtn\" className=\"btn btn-default filter-button\" data-filter=\"irrigation\" onClick={getMealData}>Get Daily Meal Plan</button>\n\n\n                {mealData && <MealList mealData={mealData} calories={calories} />}\n            </div>\n        </div>\n\n    )\n}\n\n","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\DietPref\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Jumbotron\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\CardItem\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Cards\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Footer\\index.js",["89","90"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className = \"footer\">\r\n            <div className = \"footer-logo-container\">\r\n                <Link to = \"/\" className = \"footer-logo\">\r\n                    <i className=\"fas fa-heartbeat\"></i> Nutri<span className = \"highlight\">Vice</span>\r\n                </Link>\r\n            </div>\r\n            <div className = \"copywrite-containter\">\r\n                <p className = \"copywrite\"> &copy;  2021 DT SF ND LS </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Button\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\MealList\\index.js",[],"C:\\Users\\nicho\\Documents\\CODE\\Project_3\\Project3\\client\\src\\components\\Meal\\index.js",[],["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":88,"column":16,"nodeType":"99","endLine":88,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":98,"column":17,"nodeType":"99","endLine":98,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":108,"column":17,"nodeType":"99","endLine":108,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":118,"column":17,"nodeType":"99","endLine":118,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":128,"column":17,"nodeType":"99","endLine":128,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":64,"column":18,"nodeType":"99","endLine":64,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":74,"column":19,"nodeType":"99","endLine":74,"endColumn":34},{"ruleId":"104","severity":1,"message":"105","line":332,"column":32,"nodeType":"106","messageId":"107","endLine":332,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"108","line":2,"column":27,"nodeType":"102","messageId":"103","endLine":2,"endColumn":33},{"ruleId":"100","severity":1,"message":"109","line":2,"column":35,"nodeType":"102","messageId":"103","endLine":2,"endColumn":40},{"ruleId":"93","replacedBy":"110"},{"ruleId":"95","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Router' is defined but never used.","'Route' is defined but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]